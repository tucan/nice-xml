// Generated by CoffeeScript 1.6.3
var Serializer, Writer;

Writer = require('./writer');

Serializer = (function() {
  function Serializer(spaces) {
    this._writer = new Writer();
  }

  Serializer.prototype._processArray = function(key, data) {
    var value, _i, _len;
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      value = data[_i];
      if (value === void 0 || typeof value === 'function') {
        continue;
      }
      if (Array.isArray(value)) {
        this._processArray(key, value);
      } else {
        this._processNonArray(key, value);
      }
    }
    return this;
  };

  Serializer.prototype._processObject = function(data) {
    var key, value;
    for (key in data) {
      value = data[key];
      if (!(key !== '$')) {
        continue;
      }
      if (value === void 0 || typeof value === 'function') {
        continue;
      }
      if (Array.isArray(value)) {
        this._processArray(key, value);
      } else {
        this._processNonArray(key, value);
      }
    }
    return this;
  };

  Serializer.prototype._processNonArray = function(key, value) {
    var key1, value1, _ref;
    if (value !== null && typeof value === 'object') {
      value = value.valueOf();
    }
    if (key[0] !== '$') {
      if (value === null || typeof value !== 'object') {
        this._writer.pushElement(key, value);
      } else {
        this._writer.startElement(key);
        _ref = value.$;
        for (key1 in _ref) {
          value1 = _ref[key1];
          this._writer.pushAttribute(key1, value1);
        }
        this._processObject(value);
        this._writer.endElement(key);
      }
    }
    return this;
  };

  Serializer.prototype.process = function(data) {
    this._processObject(data);
    return this._writer.buffer.join('');
  };

  return Serializer;

})();

module.exports = Serializer;
